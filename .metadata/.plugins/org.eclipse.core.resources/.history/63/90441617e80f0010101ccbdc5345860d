package com.cac.repository;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.List;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;
import com.cac.entity.Payment;

@Repository
public interface PaymentRepository extends JpaRepository<Payment,Integer>
{
	List<Payment> findByPaymentMethod(String paymentMethod);
	List<Payment> findByPaymentStatus(String paymentStatus);
	List<Payment> findByTransactionDateBetween(LocalDateTime startDate, LocalDateTime endDate);
	@Query("SELECT COALESCE(SUM(p.amountPaid), 0) FROM Payment p WHERE p.paymentMethod = :method AND DATE(p.transactionDate) = :date AND p.paymentStatus = 'Completed'")
	double sumAmountByPaymentMethodAndDate(String method, LocalDate date);
	@Query("SELECT p FROM PaymentEntity p WHERE DATE(p.transactionDate) = DATE(:date)")
    List<Payment> findPaymentsByDate(LocalDateTime date);
	List<Payment> findByTransactionDate(LocalDate date);
	List<Payment> findByTransactionDateBetweenAndPaymentStatus(LocalDateTime startDate, LocalDateTime endDate, String paymentStatus);
	

}
