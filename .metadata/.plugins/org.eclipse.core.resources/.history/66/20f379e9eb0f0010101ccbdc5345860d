<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
    <meta charset="UTF-8">
    <title>Update Transaction</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
</head>
<body>
    <div class="container mt-5">
        <h2>Update Transaction</h2>

        <!-- Step 1: Enter Transaction ID -->
        <form id="fetchTransactionForm" th:action="@{/fetchTransactionForUpdate}" method="get">
            <div class="form-group">
                <label for="transactionId">Enter Transaction ID:</label>
                <input type="number" id="transactionId" name="transactionId" class="form-control" required>
            </div>
            <button type="submit" class="btn btn-primary">Fetch Transaction</button>
        </form>

        <hr>

        <!-- Step 2: Display Transaction Details -->
        <div id="transactionDetails" th:if="${transaction}">
            <h4>Transaction Details</h4>
            <form id="updateTransactionForm">
                <!-- Update the hidden field with a unique ID -->
				<input type="hidden" id="hiddenTransactionId" th:value="${transaction.transactionId}">

                <div class="form-group">
                    <label>Amount Paid:</label>
                    <input type="number" id="amountPaid" class="form-control" th:value="${transaction.amountPaid}" required>
                </div>

                <div class="form-group">
                    <label>Payment Method:</label>
                    <select id="paymentMethod" class="form-control">
                        <option value="Credit Card" th:selected="${transaction.paymentMethod == 'Credit Card'}">Credit Card</option>
                        <option value="Debit Card" th:selected="${transaction.paymentMethod == 'Debit Card'}">Debit Card</option>
                        <option value="UPI" th:selected="${transaction.paymentMethod == 'UPI'}">UPI</option>
                        <option value="Cash" th:selected="${transaction.paymentMethod == 'Cash'}">Cash</option>
                    </select>
                </div>

                <div class="form-group">
                    <label>Payment Status:</label>
                    <select id="paymentStatus" class="form-control">
                        <option value="Pending" th:selected="${transaction.paymentStatus == 'Pending'}">Pending</option>
                        <option value="Completed" th:selected="${transaction.paymentStatus == 'Completed'}">Completed</option>
                        <option value="Failed" th:selected="${transaction.paymentStatus == 'Failed'}">Failed</option>
                    </select>
                </div>

                <button type="button" class="btn btn-success" onclick="updateTransaction()">Update Transaction</button>

                <div id="message"></div> <!-- To display success or error message -->
            </form>
        </div>

        <!-- Display Errors -->
        <div th:if="${error}" class="alert alert-danger mt-3" th:text="${error}"></div>

        <!-- Back to Home -->
        <div class="mt-3">
            <a th:href="@{/homePayment}" class="btn btn-secondary">Go to Home</a>
        </div>
    </div>

<script>
    function updateTransaction() {
    let transactionId = document.getElementById("hiddenTransactionId").value; // Fetch correct transactionId
    let amountPaid = document.getElementById("amountPaid").value;
    let paymentMethod = document.getElementById("paymentMethod").value;
    let paymentStatus = document.getElementById("paymentStatus").value;

    // üö® Ensure transactionId is not empty
    if (!transactionId || isNaN(transactionId)) {
        alert("‚ùå Invalid Transaction ID!");
        return;
    }

    let updatedTransaction = {
        amountPaid: parseFloat(amountPaid),
        paymentMethod: paymentMethod,
        paymentStatus: paymentStatus
    };

    // üöÄ Correct URL Formation
    let apiUrl = `http://localhost:7212/updateTransaction/${transactionId}`;

    fetch(apiUrl, {
        method: "PUT",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify(updatedTransaction)
    })
    .then(response => {
        if (!response.ok) {
            throw new Error("Failed to update transaction");
        }
        return response.json();
    })
    .then(data => {
        document.getElementById("message").innerHTML = "<div class='alert alert-success'>‚úÖ Transaction Updated Successfully!</div>";
        console.log("‚úÖ Updated Transaction:", data);
    })
    .catch(error => {
        document.getElementById("message").innerHTML = "<div class='alert alert-danger'>‚ùå Error Updating Transaction!</div>";
        console.error("‚ùå Error:", error);
    });
}
</script>

</body>
</html>
